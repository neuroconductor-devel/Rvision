% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calib3d.R
\name{initUndistortRectifyMap}
\alias{initUndistortRectifyMap}
\title{Compute an Undistortion and Rectification Transformation Map}
\usage{
initUndistortRectifyMap(
  camera_matrix,
  dist_coefs,
  new_camera_matrix = camera_matrix,
  nrow,
  ncol
)
}
\arguments{
\item{camera_matrix}{A 3x3 camera intrinsic matrix as returned by
\code{\link{calibrateCamera}}.}

\item{dist_coefs}{A single row matrix with 4, 5, 8, 12 or 14 elements as
returned by \code{\link{calibrateCamera}}.}

\item{new_camera_matrix}{A 3x3 camera intrinsic matrix as returned by
\code{\link{getOptimalNewCameraMatrix}} if you chose to execute this
optional step (default: \code{camera_matrix}).}

\item{nrow, ncol}{The number of rows and columns of the undistorted image.}
}
\value{
A 2xN matrix of transformed X/Y coordinates.
}
\description{
\code{initUndistortRectifyMap} computes the joint undistortion
 and rectification transformation and represents the result in the form of
 maps for \code{\link{remap}}. The undistorted image looks like original, as
 if it is captured with a camera using the camera matrix \code{new_camera_matrix}
 and zero distortion. In case of a monocular camera, \code{new_camera_matrix}
 is usually equal to \code{camera_matrix}, or it can be computed by
 \code{\link{getOptimalNewCameraMatrix}} for a better control over scaling.
}
\examples{
# See the help vignette:
\dontrun{
vignette("z8_calib", package = "Rvision")
}

}
\seealso{
\code{\link{undistort}}, \code{\link{calibrateCamera}},
 \code{\link{getOptimalNewCameraMatrix}}
}
\author{
Simon Garnier, \email{garnier@njit.edu}
}
