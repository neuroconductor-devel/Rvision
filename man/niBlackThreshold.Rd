% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ximgproc.R
\name{niBlackThreshold}
\alias{niBlackThreshold}
\title{Niblack Thresholding}
\usage{
niBlackThreshold(
  image,
  max_value = 255,
  threshold_type = "binary",
  block_size = 31,
  k = 0.5,
  method = "Niblack",
  r = 128,
  target = "new"
)
}
\arguments{
\item{image}{An 8-bit (8U) single-channel \code{\link{Image}} object.}

\item{max_value}{Non-zero value assigned to the pixels for which the
condition is satisfied (default: 255). It is used only if
\code{threshold_type} is set to "binary" or "inverse".}

\item{threshold_type}{The name of the threshold type to use. It can be any of
the following:
\itemize{
 \item{"binary":}{each pixel is replaced by `max_value` if its value is above
  the threshold, and by zero otherwise (the default).}
 \item{"inverse":}{each pixel is replaced by zero if its value is above the
  threshold, and by `max_value` otherwise.}
 \item{"truncate":}{each pixel is replaced by `threshold` if its value is
  above the threshold, and is unchanged otherwise.}
 \item{"to_zero":}{each pixel is replaced by zero if its value is below the
 threshold, and is unchanged otherwise.}
 \item{"to_zero_inverse":}{each pixel is replaced by zero if its value is
  above the threshold, and is unchanged otherwise.}
}}

\item{block_size}{Size of a pixel neighborhood that is used to calculate a
threshold value for the pixel (default: 31). It must be an odd number
greater than 1.}

\item{k}{A user-adjustable parameter used by Niblack and inspired techniques.
For Niblack, this is normally a value between 0 and 1 that is multiplied
with the standard deviation and subtracted from the mean.}

\item{method}{A string indicating the binarization method to use. It can be
any of the following:
\itemize{
 \item{"Niblack (the default)"}{}
 \item{"Sauvola"}{}
 \item{"Wolf"}{}
 \item{"Nick"}{}
}}

\item{r}{A user-adjustable parameter used by Sauvola's technique. This is the
dynamic range of standard deviation.}

\item{target}{The location where the results should be stored. It can take 3
values:
\itemize{
 \item{"new":}{a new \code{\link{Image}} object is created and the results
  are stored inside (the default).}
 \item{"self":}{the results are stored back into \code{image} (faster but
  destructive).}
 \item{An \code{\link{Image}} object:}{the results are stored in another
  existing \code{\link{Image}} object. This is fast and will not replace the
  content of \code{image} but will replace that of \code{target}. Note that
  if \code{target} does not have the same dimensions, number of channels, and
  bit depth as \code{image}, an error may be thrown.}
}}
}
\value{
If \code{target="new"}, the function returns an \code{\link{Image}}
 object. If \code{target="self"}, the function returns nothing and modifies
 \code{image} in place. If \code{target} is an \code{\link{Image}} object,
 the function returns nothing and modifies that \code{\link{Image}} object in
 place.
}
\description{
\code{niBlackThreshold} performs thresholding on an
 \code{\link{Image}} object using Niblack's technique or some of the popular
 variations it inspired.
}
\examples{
balloon <- image(system.file("sample_img/balloon1.png", package = "Rvision"))
balloon_gray <- changeColorSpace(balloon, "GRAY")
balloon_th <- niBlackThreshold(balloon_gray)

}
\seealso{
\code{\link{Image}}, \code{\link{threshold}}, \code{\link{autothreshold}}
}
\author{
Simon Garnier, \email{garnier@njit.edu}
}
