% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/morphology.R
\name{morph}
\alias{morph}
\title{Morphological Operations}
\usage{
morph(
  image,
  operation,
  kernel = NULL,
  k_shape = "rectangle",
  k_height = 5,
  k_width = 5,
  iterations = 1,
  target = "new",
  in_place = NULL
)
}
\arguments{
\item{image}{An \code{\link{Image}} object.}

\item{operation}{A string corresponding to the name of a morphological
operation to apply to the image (see Note).}

\item{kernel}{A binary matrix.}

\item{k_shape}{A string corresponding to the shape of the kernel for the
morphological operation (see Note; default: "rectangle"). Ignored if a
custom \code{kernel} is provided.}

\item{k_height}{The half-height in pixels of the kernel. Ignored if a custom
\code{kernel} is provided.}

\item{k_width}{The half-width in pixels of the kernel. Ignored if a custom
\code{kernel} is provided.}

\item{iterations}{The number of times the morphological operations should be
applied.}

\item{target}{The location where the results should be stored. It can take 3
values:
\itemize{
 \item{"new":}{a new \code{\link{Image}} object is created and the results
  are stored inside (the default).}
 \item{"self":}{the results are stored back into \code{image} (faster but
  destructive).}
 \item{An \code{\link{Image}} object:}{the results are stored in another
  existing \code{\link{Image}} object. This is fast and will not replace the
  content of \code{image} but will replace that of \code{target}. Note that
  if \code{target} does not have the same dimensions, number of channels,
  and bit depth as \code{image}, an error will be thrown.}
}}

\item{in_place}{Deprecated. Use \code{target} instead.}
}
\value{
If \code{target="new"}, the function returns an \code{\link{Image}}
 object. If \code{target="self"}, the function returns nothing and modifies
 \code{image} in place. If \code{target} is an \code{\link{Image}} object,
 the function returns nothing and modifies that \code{\link{Image}} object in
 place.
}
\description{
\code{morph} applies various morphological operations (see Note)
 to an \code{\link{Image}} object.
}
\note{
There are 8 types of morphological operations that can be achieved with
 this function:
 \itemize{
   \item{"erode":}{for each point, returns the minimum of the points in its
    neighborhood, with that neighborhood defined by the kernel.}
   \item{"dilate":}{for each point, returns the maximum of the points in its
    neighborhood, with that neighborhood defined by the kernel.}
   \item{"open":}{erosion followed by dilation.}
   \item{"close":}{dilation followed by erosion.}
   \item{"gradient":}{difference between the dilation and the erosion of an
    image.}
   \item{"tophat":}{difference between an input image and its opening.}
   \item{"blackhat":}{difference between the closing and its input image.}
   \item{"hitmiss":}{(1) erodes the image with \code{kernel > 0}; (2) erodes
    the complement of the image with \code{kernel < 0}; (3) returns the
    intersection (\code{AND}) of step 1 and step 2. The hit-or-miss transform
    is the basis of more advanced morphological operations such as thinning
    or pruning.}
 }

There are 3 types of predetermined kernel shapes that can be used with
 this function when a custom \code{kernel} is not provided:
 \itemize{
   \item{"rectangle" (the default):}{}
   \item{"cross"}{}
   \item{"ellipse"}{}
 }
}
\examples{
balloon <- image(system.file("sample_img/balloon1.png", package = "Rvision"))
balloon_eroded <- morph(balloon, "erode")

}
\seealso{
\code{\link{Image}}
}
\author{
Simon Garnier, \email{garnier@njit.edu}
}
