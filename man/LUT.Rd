% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transform.R
\name{LUT}
\alias{LUT}
\title{Look-up Table Transform}
\usage{
LUT(image, lut, target = "new")
}
\arguments{
\item{image}{An \code{\link{Image}} object.}

\item{lut}{A look-up table. This should be a vector with 256 elements, or a
\code{256 x n} matrix, with n corresponding to the number of channels in
\code{image}. If \code{lut} is a vector and \code{image} has more than one
channel, then \code{lut} is recycled for each channel.}

\item{target}{The location where the results should be stored. It can take 3
values:
\itemize{
 \item{"new":}{a new \code{\link{Image}} object is created and the results
  are stored inside (the default).}
 \item{"self":}{the results are stored back into \code{image} (faster but
  destructive).}
 \item{An \code{\link{Image}} object:}{the results are stored in another
  existing \code{\link{Image}} object. This is fast and will not replace the
  content of \code{image} but will replace that of \code{target}. Note that
  if \code{target} does not have the same dimensions, number of channels,
  and bit depth as \code{image}, nothing will be stored.}
}}
}
\value{
If \code{target="new"}, the function returns an \code{\link{Image}}
 object. If \code{target="self"}, the function returns nothing and modifies
 \code{image} in place. If \code{target} is an \code{\link{Image}} object,
 the function returns nothing and modifies that \code{\link{Image}} object in
 place.
}
\description{
\code{LUT} performs a look-up table transform of an
 \code{\link{Image}} object.
}
\examples{
balloon <- image(system.file("sample_img/balloon1.png", package = "Rvision"))
high_contrast_lut <- 255 * pbeta(0:255 / 255, 4, 4)
high_contrast_balloon <- LUT(balloon, high_contrast_lut)

}
\seealso{
\code{\link{Image}}, \code{\link{histmatch}}
}
\author{
Simon Garnier, \email{garnier@njit.edu}
}
