% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filters.R
\name{bilateralFilter}
\alias{bilateralFilter}
\title{Edge-Preserving Noise Reduction with a Bilateral Filter}
\usage{
bilateralFilter(
  image,
  d = 5,
  sigma_color = 25,
  sigma_space = 25,
  target = "new"
)
}
\arguments{
\item{image}{An \code{\link{Image}} object.}

\item{d}{The diameter in pixels of the filter neighborhood (default: 5).}

\item{sigma_color}{The filter standard deviation in the color space
(see Note; default: 25).}

\item{sigma_space}{The filter standard deviation in the coordinate space
(see Note; default: 25).}

\item{target}{The location where the results should be stored. It can take 3
values:
\itemize{
 \item{"new":}{a new \code{\link{Image}} object is created and the results
  are stored inside (the default).}
 \item{An \code{\link{Image}} object:}{the results are stored in another
  existing \code{\link{Image}} object. This is fast and will not replace the
  content of \code{image} but will replace that of \code{target}. Note that
  if \code{target} does not have the same dimensions, number of channels, and
  bit depth as \code{image}, an error may be thrown.}
}}
}
\value{
If \code{target="new"}, the function returns an \code{\link{Image}}
 object. If \code{target} is an \code{\link{Image}} object, the function
 returns nothing and modifies that \code{\link{Image}} object in place.
}
\description{
\code{bilateralFilter} applies the bilateral filter to an image.
 This filter can reduce unwanted noise very well while keeping edges fairly
 sharp. However, it is very slow compared to most filters.
}
\note{
A larger value of \code{sigma_color} means that farther colors within
 the pixel neighborhood will be mixed together, resulting in larger areas of
 semi-equal color.

A larger value of \code{sigma_space} means that farther pixels will
 influence each other as long as their colors are close enough. When
 \code{d > 0}, it specifies the neighborhood size regardless of
 \code{sigma_space}. Otherwise, \code{d} is proportional to \code{sigma_space}.
}
\examples{
balloon <- image(system.file("sample_img/balloon1.png", package = "Rvision"))
rnd <- image(array(sample(0:30, nrow(balloon) * ncol(balloon), replace = TRUE),
                   dim = c(nrow(balloon), ncol(balloon), 3)))
changeBitDepth(rnd, "8U", target = "self")
balloon_noisy <- balloon + rnd
balloon_bilateral <- bilateralFilter(balloon_noisy, 25)

}
\seealso{
\code{\link{Image}}, \code{\link{gaussianBlur}}
}
\author{
Simon Garnier, \email{garnier@njit.edu}
}
