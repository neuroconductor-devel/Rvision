% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/feature.R
\name{ORBkeypoints}
\alias{ORBkeypoints}
\title{Keypoint Detection with ORB}
\usage{
ORBkeypoints(
  image,
  mask = NULL,
  n_features = 500,
  scale_factor = 1.2,
  n_levels = 8,
  edge_threshold = 31,
  first_level = 0,
  WTA_K = 2,
  score_type = "HARRIS",
  patch_size = 31,
  fast_threshold = 20
)
}
\arguments{
\item{image}{An \code{\link{Image}} object.}

\item{mask}{A binary \code{\link{Image}} object with the same dimensions as
\code{image}. This can be used to mask out pixels that should not be
considered when searching for keypoints (pixels set to 0 in the mask will be
ignored during the search).}

\item{n_features}{The maximum number of features to retain.}

\item{scale_factor}{The pyramid decimation ratio, always greater than 1
(default: 1.2). \code{scaleFactor = 2} uses a "classical" pyramid, where
each level has 4 times less pixels than the previous one. Such a large scale
factor will degrade feature matching scores dramatically. On the other hand,
a scale factor too close to 1 will require longer computation times.}

\item{n_levels}{The number of pyramid decimation levels (default: 8).}

\item{edge_threshold}{The size of the border where the features are not
detected. It should roughly match the \code{patch_size} parameter below
(default: 31).}

\item{first_level}{The level of the pyramid to put the source image into
(default: 0). Previous levels are filled with upscaled versions of the
source image.}

\item{WTA_K}{The number of points that produce each element of the oriented
BRIEF descriptor for a keypoint. \code{WTA_K = 2} (the default) takes a
random pair of points and compare their brightness, yielding a binary
response. \code{WTA_K = 3} takes 3 random points, finds the point of maximum
brightness, and output the index of the winner (0, 1 or 2). \code{WTA_K = 4}
perform the operation but with 4 random points , and output the index of the
winner (0, 1, 2, or 3). With \code{WTA_K = 3} and \code{WTA_K = 4}, the
output will require 2 bits for storage and, therefore, will need a special
variant of the Hamming distance for keypoint matching ("BruteForce-Hamming(2)"
in \code{\link{matchKeypoints}}).}

\item{score_type}{A character string indicating the the scoring method to
use. \code{"HARRIS"} (the default) uses the Harrisalgorithm to rank the
detected features. \code{"FAST"} is an alternative method that produces
slightly less stable keypoints but is a little faster to compute.}

\item{patch_size}{The size of the patch used to compute the the oriented
BRIEF descriptor (default: 31).}

\item{fast_threshold}{A threshold for selecting "good enough" keypoints
(default: 20)}
}
\value{
A list with two elements:
 \describe{
   \item{keypoints: }{a matrix containing the following information about
    each keypoint: }
     \describe{
       \item{angle: }{the keypoint orientation in degrees, between 0 and 360,
         measured relative to the image coordinate system, i.e., clockwise.}
       \item{octave: }{the pyramid layer from which the keypoint was
         extracted.}
       \item{x: }{the x coordinate of the keypoint.}
       \item{y: }{the y coordinate of the keypoint.}
       \item{response: }{the response by which the keypoint have been
         selected. This can be used for the further sorting or subsampling.}
       \item{size: }{the diameter of the keypoint neighborhood.}
     }
   \item{descriptors: }{a single-channel \code{\link{Image}} with each row
     corresponding to the BRIEF descriptor of a single keypoint.}
 }
}
\description{
\code{ORBkeypoints} finds and describes keypoints in an image
 using the ORB method. Keypoints are prominent features that can be used to
 quickly match images.
}
\examples{
dots <- image(system.file("sample_img/dots.jpg", package = "Rvision"))
kp <- ORBkeypoints(dots, n_features = 40000)
plot(dots)
points(kp$keypoints[, c("x", "y")], pch = 19, col = "red")

}
\seealso{
\code{\link{matchKeypoints}}, \code{\link{goodFeaturesToTrack}},
 \code{\link{findTransformORB}}
}
\author{
Simon Garnier, \email{garnier@njit.edu}
}
