% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/arithmetic.R
\name{polarToCart}
\alias{polarToCart}
\title{Convert Polar Coordinates to Cartesian}
\usage{
polarToCart(magnitude, angle, x = "new", y = "new", degree = FALSE)
}
\arguments{
\item{magnitude}{A 32- or 64-bit (32F or 64F) \code{\link{Image}}
object corresponding to the magnitudes of the vector field.}

\item{angle}{A 32- or 64-bit (32F or 64F) \code{\link{Image}}
object corresponding to the angles of the vector field.}

\item{x}{The location where the x coordinates should be stored. It can take 2
values:
\describe{
 \item{"new":}{a new \code{\link{Image}} object is created and the results
  are stored inside (the default).}
 \item{An \code{\link{Image}} object:}{the results are stored in another
  existing \code{\link{Image}} object. Note that an error will be thrown if
  \code{x} does not have the same dimensions, number of channels, and bit
  depth as \code{magnitude} and \code{angle}.}
}}

\item{y}{The location where the y coordinates should be stored. It can take 2
values:
\describe{
 \item{"new":}{a new \code{\link{Image}} object is created and the results
  are stored inside (the default).}
 \item{An \code{\link{Image}} object:}{the results are stored in another
  existing \code{\link{Image}} object. Note that an error will be thrown if
  \code{y} does not have the same dimensions, number of channels, and bit
  depth as \code{magnitude} and \code{angle}.}
}}

\item{degree}{A logical indicating whether the angles are measured in radians
(the default) or degrees.}
}
\value{
If \code{x="new"} and \code{y="new"}, the function returns a list
 containing two \code{\link{Image}} objects. If \code{x} and \code{y} are
 \code{\link{Image}} objects, the function returns nothing and modifies these
 \code{\link{Image}} objects in place.
}
\description{
\code{polarToCart} calculates x and y coordinates of vector
 field from their polar representation (magnitude and angle).
}
\examples{
balloon <- image(system.file("sample_img/balloon1.png", package = "Rvision"))
field <- spatialGradient(balloon)
lapply(field, changeBitDepth, bitdepth = "32F", target = "self")
field_converted <- cartToPolar(field$dx, field$dy)
field_deconverted <- polarToCart(field_converted$magnitude, field_converted$angle)

}
\seealso{
\code{\link{polarToCart}}, \code{\link{spatialGradient}}
}
\author{
Simon Garnier, \email{garnier@njit.edu}
}
