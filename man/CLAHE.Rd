% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transform.R
\name{CLAHE}
\alias{CLAHE}
\title{Contrast Limited Adaptive Histogram Equalization}
\usage{
CLAHE(image, clip_limit = 40, n_tiles = c(8, 8), target = "new")
}
\arguments{
\item{image}{An \code{\link{Image}} object.}

\item{clip_limit}{A numeric value representing the contrast limit above which
pixels are clipped and distributed uniformly to other bins before applying
histogram equalization on the tiles.}

\item{n_tiles}{A vector with 2 elements representing the number of tiles
along the width and height of the image (default: \code{c(8, 8)}).}

\item{target}{The location where the results should be stored. It can take 3
values:
\itemize{
 \item{"new":}{a new \code{\link{Image}} object is created and the results
  are stored inside (the default).}
 \item{"self":}{the results are stored back into \code{image} (faster but
  destructive).}
 \item{An \code{\link{Image}} object:}{the results are stored in another
  existing \code{\link{Image}} object. This is fast and will not replace the
  content of \code{image} but will replace that of \code{target}. Note that
  if \code{target} does not have the same number of channels and bit depth
  as \code{image}, an error will be thrown.}
}}
}
\value{
If \code{target="new"}, the function returns an \code{\link{Image}}
 object. If \code{target="self"}, the function returns nothing and modifies
 \code{image} in place. If \code{target} is an \code{\link{Image}} object,
 the function returns nothing and modifies that \code{\link{Image}} object in
 place.
}
\description{
\code{CLAHE} performs adaptive histogram equalization to enhance
 the contrast of an image. Unlike regular histogram equalization
 (\code{\link{histEq}}), CLAHE first divides the image into small blocks
 called "tiles" and performs histogram equalization on each of these tiles.
 To reduce noise amplification contrast limiting is also applied: if any
 histogram bin is above the specified contrast limit, those pixels are
 clipped and distributed uniformly to other bins before applying histogram
 equalization. After equalization, to remove artifacts in tile borders,
 bilinear interpolation is applied.
}
\examples{
balloon <- image(system.file("sample_img/balloon1.png", package = "Rvision"))
balloon_Lab <- changeColorSpace(balloon, "Lab")
L <- extractChannel(balloon_Lab, 1)
clahe <- CLAHE(L, 1, c(2, 2))
insertChannel(balloon_Lab, 1, clahe)
balloon_contrast <- changeColorSpace(balloon_Lab, "BGR")

}
\seealso{
\code{\link{Image}}, \code{\link{histEq}}
}
\author{
Simon Garnier, \email{garnier@njit.edu}
}
