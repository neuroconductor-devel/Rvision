% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calib3d.R
\name{undistort}
\alias{undistort}
\title{Compensate for Lens Distortion}
\usage{
undistort(
  image,
  camera_matrix,
  dist_coefs,
  new_camera_matrix = NULL,
  target = "new"
)
}
\arguments{
\item{camera_matrix}{A 3x3 camera intrinsic matrix as returned by
\code{\link{calibrateCamera}}.}

\item{dist_coefs}{A single row matrix with 4, 5, 8, 12 or 14 elements as
returned by \code{\link{calibrateCamera}}.}

\item{new_camera_matrix}{A 3x3 camera intrinsic matrix as returned by
\code{\link{getOptimalNewCameraMatrix}} if you chose to execute this
optional step (default: NULL).}

\item{target}{The location where the results should be stored. It can take 3
values:
\itemize{
 \item{"new":}{a new \code{\link{Image}} object is created and the results
  are stored inside (the default).}
 \item{An \code{\link{Image}} object:}{the results are stored in another
  existing \code{\link{Image}} object. This is fast and will not replace the
  content of \code{image} but will replace that of \code{target}. Note that
  \code{target} must have the same dimensions, bit depth, and number of
  channels as \code{image}.}
}}
}
\value{
If \code{target="new"}, the function returns an \code{\link{Image}}
 object. If \code{target} is an \code{\link{Image}} object, the function
 returns nothing and modifies that \code{\link{Image}} object in place.
}
\description{
\code{undistort} transforms an image to compensate for radial
and tangential lens distortion.
}
\examples{
# See the help vignette:
\dontrun{ vignette("", package = "Rvision") }

}
\seealso{
\code{\link{findChessboardCorners}}, \code{\link{cornerSubPix}},
 \code{\link{calibrateCamera}}, \code{\link{getOptimalNewCameraMatrix}}
}
\author{
Simon Garnier, \email{garnier@njit.edu}
}
