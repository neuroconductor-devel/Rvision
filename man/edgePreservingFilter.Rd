% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ximgproc.R
\name{edgePreservingFilter}
\alias{edgePreservingFilter}
\title{Edge Preserving Filter}
\usage{
edgePreservingFilter(image, d = 11, threshold = 5, target = "new")
}
\arguments{
\item{image}{An 8-bit (8U) 3-channel \code{\link{Image}} object.}

\item{d}{The diameter of each pixel's neighborhood that is used during
filtering. It must be equal to or greater than 3.}

\item{threshold}{The threshold value which distinguishes between noise,
outliers, and data.}

\item{target}{The location where the results should be stored. It can take 3
values:
\describe{
 \item{"new":}{a new \code{\link{Image}} object is created and the results
  are stored inside (the default).}
 \item{"self":}{the results are stored back into \code{image} (faster but
  destructive).}
 \item{An \code{\link{Image}} object:}{the results are stored in another
  existing \code{\link{Image}} object. This is fast and will not replace the
  content of \code{image} but will replace that of \code{target}. Note that
  if \code{target} does not have the same dimensions, number of channels, and
  bit depth as \code{image}, an error may be thrown.}
}}
}
\value{
If \code{target="new"}, the function returns an \code{\link{Image}}
 object. If \code{target="self"}, the function returns nothing and modifies
 \code{image} in place. If \code{target} is an \code{\link{Image}} object,
 the function returns nothing and modifies that \code{\link{Image}} object in
 place.
}
\description{
\code{edgePreservingFilter} smoothes Gaussian noise as well as
 salt and pepper noise in \code{\link{Image}} object while preserving the
 edges.
}
\examples{
balloon <- image(system.file("sample_img/balloon1.png", package = "Rvision"))
balloon_smooth <- edgePreservingFilter(balloon)

}
\references{
\itemize{ \item{Reich, S., Wörgötter, F., & Dellen, B. (2018). A
 real-time edge-preserving denoising filter. Proceedings of the 13th
 International Joint Conference on Computer Vision, Imaging and Computer
 Graphics Theory and Applications. International Conference on Computer
 Vision Theory and Applications, Funchal, Madeira, Portugal.
 https://doi.org/10.5220/0006509000850094} }
}
\seealso{
\code{\link{Image}}, \code{\link{gaussianBlur}}
}
\author{
Simon Garnier, \email{garnier@njit.edu}
}
